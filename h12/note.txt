[nmの使い方]
実行結果：nm_cabin.o.txt, nm-r.txt, nm--size-sort.txt, nm-f.txt, nm-A.txt, 
 nm_a.out.txt, strip.txt, nm_libc.a.txt, nm_libz.so.txt
Cプログラム：cabin.c, cabin.txt, foo.c, foo.txt

・cabin.cプログラムをコンパイル後（cabin.txt）、オブジェクトファイルcabin.o
に対して、nmコマンドを発行する（nm_cabin.o.txt）
ここで、未初期化のグローバル変数の、array配列とf2のシンボルクラスがC
（共有シンボル）となることに注意。また、共有シンボルの値はシンボルのサイズと
なっている。

・これは、C言語では、他のソースファイルで同一名称の未初期化グローバル変数が
定義されている場合、これらが全て同一のオブジェクトを参照する、という仕様を
反映している。
例えば、他のソースでサイズが2048のint配列として、arrayという名前の未初期化
グローバル変数が定義されていれば、cabin.cで定義されたarray配列と同一のもの
として扱われ、更に、これらの共有シンボルの中で最大のサイズの領域が確保される

・nmコマンドではデフォルトでシンボル名を昇順に出力するが、これを降順に出力
するには、-rオプションをつける（nm-r.txt）

・シンボルの出力をシンボルのサイズ順にするには、--size-sortオプションを
つける。シンボルの値とサイズを両方出力には-S(--print-size)オプションを
つける(nm--size-sort.txt）

・もう一つのソースfoo.cをコンパイル＆リンクし、オブジェクトファイルfoo.oと
2つの実行ファイルa.out, fooを作成して(foo.txt)、以下のnmのオプションを調べる

・出力フォーマットを変更には、-fオプションをつける(nm-f.txt)

・nmコマンド引数に複数のオブジェクトファイルを並べることができる。この場合、
オブジェクトファイル名の見出しの後に、オブジェクトそれぞれのシンボルが
出力される。-Aオプションをつけると、オブジェクトファイル名の見出しの代わりに
、各行にオブジェクトファイル名が含まれるようになる(nm-A.txt)

・nmコマンドの引数を省略した場合、a.outのシンボルが表示される(nm_a.out.txt)

・シンボルをstrip後、nmコマンドを発行すると、シンボルは見つからないが、
ダイナミックシンボルは表示することができる(strip.txt)

・静的ライブラリのシンボルを表示することもできる。デフォルトでは、
静的ライブラリが含むオブジェクト毎にシンボルが表示される。-Aオプションを
つけると、静的ライブラリ名、オブジェクトファイル名が各シンボル表示に
付加される。なお、linux 20.04 ではlibc.aは/usr/lib/x86_64-linux-gnu/libc.a
に格納されている
（nm_libc.a.txt）

・共有オブジェクトに対するnmコマンドの出力例としては、本に記載のlibqdbm.soの
代わりに、libz.soで試した（nm_libz.so.txt）



(参考情報)
nm - オブジェクトファイルのシンボル情報を表示する
https://linuxcommand.net/nm/
